language: php

sudo: false

notifications:
  on_success: never
  on_failure: change

php:
  - 7.0

before_script:
  - bash tests/bin/install-wp-tests.sh wordpress_test root '' localhost latest
  - curl -s http://getcomposer.org/installer | php
  - php composer.phar install --dev --no-interaction
  - composer install --dev
  # After CodeSniffer install you should refresh your path.
  - phpenv rehash
  # Install ESLint.
  - npm install -g eslint
  - npm install -g eslint-config-wordpress

script:
  # Search for PHP syntax errors.
  # - find . \( -name '*kirki*.php' \) -exec php -lf {} \;
  - ./vendor/bin/phpunit --coverage-clover ./build/logs/clover.xml
  # Run the plugin through ESLint.
  - eslint ./js/*.js
  # WordPress Coding Standards.
  # @link https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards
  # @link http://pear.php.net/package/PHP_CodeSniffer/
  # -p flag: Show progress of the run.
  # -s flag: Show sniff codes in all reports.
  # -v flag: Print verbose output.
  # -n flag: Do not print warnings. (shortcut for --warning-severity=0)
  # --standard: Use WordPress as the standard.
  # --extensions: Only sniff PHP files.
  - vendor/bin/phpcs -p -s -v -n ./*.php --standard=./phpcs.ruleset.xml --extensions=php
  - vendor/bin/phpcs -p -s -v -n ./**/*.php --standard=./phpcs.ruleset.xml --extensions=php
